#!/usr/bin/env node
// -*- mode: javascript; -*-

"use strict";

var program = require('commander');
var rest = require('restler');
var tools = require('./tools.js');
var config = require('./config');

var base = config.baseApiUrl + "/products/";

program
  .command("list")
  .description("List all products")
  .action(function(opts) {
    console.log("Products:");
    var config = tools.readConfig();

    rest.get(base, {username: config.username, password: config.password})
      .on('success', function(data , response) {
      	for(var key in data){
	  console.log(JSON.stringify(data[key]));
      	}
      }).on('fail', tools.failureHandler);
  });	

program
  .command("create <name> [heartbeat]")
  .description("Create new product")
  .action(function(name, heartbeat, opts) {
    console.log("Creating new product named:", name);
    var config = tools.readConfig();
    // default value for heartbeat is 60 sec
    var heartbeat = heartbeat ? heartbeat : 60;

    rest.postJson(base, {name: name, heartbeat: heartbeat}, {username: config.username, password: config.password})
      .on('success', function(data, response) {
    	console.log("New product created: " + JSON.stringify(data));
      }).on('fail', tools.failureHandler);
  });	

program
  .command("meta <productName>")
  .description("List all metadata for given product")
  .action(function(productName, opts) {
    console.log("Getting metadata for: " + productName);
    var config = tools.readConfig();

    rest.get(base + "?name=" + productName, {username: config.username, password: config.password})
      .on('success', function(data, response) {
      	var productId = data[0].id;

      	rest.get(base + productId + '/meta', {username: config.username, password: config.password})
      	  .on('success', function(data , response) {
      	    for(var key in data){
      	      console.log(JSON.stringify(data[key]));
      	    }
      	  }).on('fail', tools.failureHandler);

      }).on('fail', tools.failureHandler);
  });	

program
  .command("meta-delete <productName> <key>")
  .description("Delete single product's metadata entry")
  .action(function(productName, key, opts){
    console.log("Deleting metadata entry for key: " + key + " for product: " + productName);
    var config = tools.readConfig();

    rest.get(base + "?name=" + productName, {username: config.username, password: config.password})
      .on('success', function(data, response) {
        var productId = data[0].id;

        rest.del(base + productId + '/meta/' + key, {username: config.username, password: config.password})
          .on('success', function(data, response){

            console.log('Key ' + key + ' deleted successfully for product ' + productName + '.');

          }).on('fail', tools.failureHandler);

      }).on('fail', tools.failureHandler);      

  });


program.parse(process.argv);
if (!program.args.length) {
  program.help();
}
